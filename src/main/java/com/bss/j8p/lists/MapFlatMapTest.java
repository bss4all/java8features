package com.bss.j8p.lists;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

public class MapFlatMapTest {

	public static void main(String[] args) {
		ArrayList<String> fruit = new ArrayList<>();
		fruit.add("Sudhamsh");
		fruit.add("Kumar");
		fruit.add("Biruduraju");
		fruit.add("SudhamshKumarBiruduraju");
		System.out.println("List of fruit-" + fruit);

		// lets use map() to convert list of fruit
		List list = fruit.stream().map(s -> s.length()).collect(Collectors.toList());
		System.out.println("List generated by map-" + list);

		List<List<Integer>> number = new ArrayList<>();
		number.add(Arrays.asList(1, 2, 3));
		number.add(Arrays.asList(3, 4, 5));
		number.add(Arrays.asList(5, 6, 7));
		number.add(Arrays.asList(7, 8, 9));
		number.add(Arrays.asList(8, 9, 0));
		number.add(Arrays.asList(9, 0, 1));

		System.out.println("List of list-" + number);

		// using flatmap() to flatten this list
		List<Integer> flatList = number.stream().flatMap(l -> l.stream()).collect(Collectors.toList());

		// printing the list
		System.out.println("List generate by flatMap-" + flatList);

		// // using flatmap() to flatten this lists to set and remove duplicates
		Set<Integer> flatSet = number.stream().flatMap(l -> l.stream()).collect(Collectors.toSet());

		// printing the list
		System.out.println("Set generate by flatMap-" + flatSet);
	}

}
